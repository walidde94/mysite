version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ecostep-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ecostep
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecostep-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecostep-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:admin123@mongodb:27017/ecostep?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRE: 30d
      AI_SERVICE_URL: http://ai-service:8000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - ai-service
    networks:
      - ecostep-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # AI Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: ecostep-ai-service
    restart: unless-stopped
    environment:
      PORT: 8000
      HOST: 0.0.0.0
      DEBUG: "False"
    ports:
      - "8000:8000"
    networks:
      - ecostep-network
    volumes:
      - ./ai-service:/app

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ecostep-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ecostep-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ecostep-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - ecostep-network

networks:
  ecostep-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
